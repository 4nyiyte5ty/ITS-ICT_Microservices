version: "3.7"
services:
  #
  # Customer Microservice
  # 
  customer-ms:
    build:
      context: ./customer
    container_name: customer-ms
    ports:
      - "8102:8102"
    depends_on:
      - mongodb_db
  mongodb_db:
    image: mongo:latest
    container_name: customer-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: customer_db
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
  #
  # Order Microservice
  #
  order-ms:
    build:
      context: ./order
    container_name: order-ms
    ports:
      - "8103:8103"
    depends_on:
      - postgres_db
  postgres_db:
    image: postgres:latest
    container_name: order-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./order/dbinit.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
  #
  # Notification
  #
  zookeeper:
    image: confluent/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"

  kafka:
    image: confluent/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

volumes:
 mongodb_data: {}
 postgres_data: {}